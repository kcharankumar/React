 
import React  from 'react';
import './App.css';
 /*
The lifecycle of the component is divided into four phases. They are:
Initial Phase - It is the birth phase of the lifecycle of a ReactJS component. Here, the component starts its 
journey on a way to the DOM. In this phase, a component contains the default Props and initial State. 

Mounting Phase  - In this phase, the instance of a component is created and inserted into the DOM

Updating Phase  -  When ever there is change in the state, methods of this phase will be executed.

Unmounting Phase – Before removing the components from DOM, this phase methods will be executed.

*/

class App extends React.Component
{
  constructor (props)
  {
    super (props) 
   
    this.state={
      newDate:new Date()
    }

    this.forceUpdateState = this.forceUpdateState.bind(this);
  } 
   forceUpdateState()
   {      
     this.setState({newDate: new Date()});
     this.forceUpdate();
   }

render() {
  return( 
      <div>  
 
          <h2> The current time is  {this.state.newDate.toLocaleTimeString()}</h2>
          <button onClick={this.forceUpdateState }> Update Current Time </button>          
      </div> 
  );
}
 
//This is invoked immediately before a component gets rendered into the DOM. 
componentWillMount()
{
  alert ("componentWillMount() - This is invoked immediately before a component gets rendered into the DOM. .  ");
  console.log("componentWillMount()");
}

//This is invoked immediately after a component gets rendered and placed on the DOM.
componentDidMount()
{
  alert ("componentDidMount() - This is invoked immediately after a component gets rendered and placed on the DOM.");
  console.log("componentDidMount()")
}

// It is invoked just before the component updating occurs.
componentWillUpdate()
{
  alert ("componentWillUpdate() -  It is invoked just before the component updating occurs.");
  console.log("componentWillUpdate()");
}

// It is invoked immediately after the component updating occurs.
componentDidUpdate()
{  
  alert ("componentDidUpdate() -  It is invoked immediately after the component updating occurs.");
  console.log("componentDidUpdate()");

}

 // This method is invoked immediately before a component is destroyed and unmounted permanently
componentWillUnmount()
{    
  alert ("componentWillUnmount() -  This method is invoked immediately before a component is destroyed and unmounted permanently");
  console.log("componentWillUnmount()");

}
}

export default App;
